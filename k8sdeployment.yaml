# Jmeter cli demo api deployment,service
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jmeterclidemo
  name: jmeterclidemo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jmeterclidemo
  template:
    metadata:
      labels:
        app: jmeterclidemo
    spec:
      containers:
        - image: jmeterclidemo
          name: jmeterclidemo
          imagePullPolicy: Never 
          env:
          - name: TokenKey
            valueFrom:
              secretKeyRef:
                name: secrets-jmeterclidemo
                key: TokenKey
          - name: DBPassword
            valueFrom: 
              secretKeyRef:
                name: secrets-mssql
                key: DBPassword
          ports:
            - containerPort: 80
            - containerPort: 443
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jmeterclidemo
  name: jmeterclidemo
spec:
  type: LoadBalancer
  ports:
    - name: "http"
      port: 5001
      targetPort: 80
    - name: "https"
      port: 5000
      targetPort: 443
  selector:
    app: jmeterclidemo
status:
  loadBalancer: {}
---
# mssql database deployment,service,pvc
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql-deployment
  labels:
    app: mssql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql
  template:
    metadata: 
      name: mssql-deployment
      labels:
        app: mssql
    spec:
      containers:
      - name: mssql-container
        image: mcr.microsoft.com/mssql/server:2019-GA-ubuntu-16.04
        imagePullPolicy: Never
        ports:
        - containerPort: 1433
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: MSSQL_PID
          value: Express
        - name: MSSQL_SA_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: secrets-mssql
              key: DBPassword
        volumeMounts:
        - name: data
          mountPath: /var/opt/mssql/data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: data
---
apiVersion: v1
kind: Service
metadata:  
  name: mssql-service
  labels:
    app: mssql
spec:
  ports:
    - protocol: TCP
      port: 1436
      targetPort: 1433
  selector:
    app: mssql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Jmeter job
apiVersion: batch/v1
kind: Job
metadata:
  name: jmeter
spec:
  backoffLimit: 3
  completions: 1
  template:
    spec: 
      restartPolicy: OnFailure
      containers:
        - command:
            - /bin/bash
            - /jmeter/test-scripts/entrypoint.sh
          image: justb4/jmeter:latest
          imagePullPolicy: Never 
          name: jmeter
          volumeMounts:
            - mountPath: /jmeter/test-scripts
              name: test-scripts
            - mountPath: /jmeter/results
              name: results
            - mountPath: /jmeter/flag
              name: flag
      volumes:
        - name: test-scripts
          persistentVolumeClaim:
            claimName: test-scripts
        - name: results
          persistentVolumeClaim:
            claimName: results
        - name: flag
          persistentVolumeClaim:
            claimName: flag
status: {}
---
# AWS cli job and pvc
apiVersion: batch/v1
kind: Job
metadata:
  name: awscli
spec:
  backoffLimit: 3
  completions: 1
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - command:
            - "/app/aws-script/entrypoint.sh"
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: secrets-aws
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: secrets-aws
                  key: AWS_SECRET_ACCESS_KEY
          image: amazon/aws-cli:latest
          name: awscli
          imagePullPolicy: Never 
          resources: {}
          volumeMounts:
            -  name: aws-script  
               mountPath: /app/aws-script/entrypoint.sh
               subPath: entrypoint.sh
            - mountPath: /app/test-scripts
              name: test-scripts
            - mountPath: /app/results
              name: results
            - mountPath: /app/flag
              name: flag
      volumes:
        - name: aws-script
          configMap:
            name: aws-script
            defaultMode: 0777
        - name: test-scripts
          persistentVolumeClaim:
            claimName: test-scripts
        - name: results
          persistentVolumeClaim:
            claimName: results
        - name: flag
          persistentVolumeClaim:
            claimName: flag
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: test-scripts
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: results
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: flag
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
