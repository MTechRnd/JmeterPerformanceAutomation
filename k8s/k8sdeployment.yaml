# Jmeter cli demo api deployment,service
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jmeterclidemo
  name: jmeterclidemo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jmeterclidemo
  template:
    metadata:
      labels:
        app: jmeterclidemo
    spec:
      containers:
        - image: amit2711/jmeterperformanceautomation:latest
          name: jmeterclidemo
          env:
          - name: TokenKey
            valueFrom:
              secretKeyRef:
                name: secrets-jmeterclidemo
                key: TokenKey
          - name: DBPassword
            valueFrom: 
              secretKeyRef:
                name: secrets-mssql
                key: DBPassword
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jmeterclidemo
  name: jmeterclidemo
spec:
  type: LoadBalancer
  ports:
    - name: "https"
      protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: jmeterclidemo
status:
  loadBalancer: {}
---
# mssql database deployment,service,pvc
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql-deployment
  labels:
    app: mssql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql
  template:
    metadata: 
      name: mssql-deployment
      labels:
        app: mssql
    spec:
      containers:
      - command:
          - /bin/bash
          - /app/script/entrypoint.sh
        name: mssql-container
        image: mcr.microsoft.com/mssql/server:2019-GA-ubuntu-16.04
        imagePullPolicy: Never
        ports:
        - containerPort: 1433
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: MSSQL_PID
          value: Express
        - name: MSSQL_SA_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: secrets-mssql
              key: DBPassword
        volumeMounts:
        - name: script
          mountPath: /app/script
      volumes:
      - name: script
        configMap:
          name: sql-script
          defaultMode: 0777
---
apiVersion: v1
kind: Service
metadata:  
  name: mssql-service
  labels:
    app: mssql
spec:
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
  selector:
    app: mssql
---
# Jmeter job
apiVersion: batch/v1
kind: CronJob
metadata:
  name: jmeter
spec:
  schedule: "55 * * * *"
  jobTemplate:
    spec:
      backoffLimit: 3
      completions: 1
      template:
        spec: 
          restartPolicy: OnFailure
          containers:
            - command:
                - /bin/bash
                - /jmeter/jmeter-script/entrypoint.sh
              image: justb4/jmeter:latest
              imagePullPolicy: Never 
              name: jmeter
              volumeMounts:
                - mountPath: /jmeter/test-scripts
                  name: test-scripts
                - mountPath: /jmeter/results
                  name: results
                - mountPath: /jmeter/flag
                  name: flag
                - mountPath: /jmeter/jmeter-script
                  name: jmeter-script
          volumes:
            - name: test-scripts
              persistentVolumeClaim:
                claimName: test-scripts
            - name: results
              persistentVolumeClaim:
                claimName: results
            - name: flag
              persistentVolumeClaim:
                claimName: flag
            - name: jmeter-script
              configMap:
                name: jmeter-script
                defaultMode: 0777
status: {}
---
# AWS cli job and pvc
apiVersion: batch/v1
kind: CronJob
metadata:
  name: awscli
spec:
  schedule: "50 * * * *"
  jobTemplate:
    spec:
      backoffLimit: 3
      completions: 1
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - command:
                - "/app/aws-script/entrypoint.sh"
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: secrets-aws
                      key: AWS_ACCESS_KEY_ID
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: secrets-aws
                      key: AWS_SECRET_ACCESS_KEY
              image: amazon/aws-cli:latest
              name: awscli
              imagePullPolicy: Never 
              resources: {}
              volumeMounts:
                - name: aws-script  
                  mountPath: /app/aws-script/entrypoint.sh
                  subPath: entrypoint.sh
                - mountPath: /app/test-scripts
                  name: test-scripts
                - mountPath: /app/results
                  name: results
                - mountPath: /app/flag
                  name: flag
          volumes:
            - name: aws-script
              configMap:
                name: aws-script
                defaultMode: 0777
            - name: test-scripts
              persistentVolumeClaim:
                claimName: test-scripts
            - name: results
              persistentVolumeClaim:
                claimName: results
            - name: flag
              persistentVolumeClaim:
                claimName: flag
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: test-scripts
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: results
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: flag
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
